{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","toggleImportanceOf","find","n","changedNote","returnedNote","map","catch","error","setTimeout","key","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","length","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"mOAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCgB3B,EArBA,WACb,IAAMK,EAAUC,IAAMC,IAHR,UAIRC,EAAc,CAClBC,GAAI,IACJN,QAAS,mCACTO,KAAM,2BACNT,WAAW,GAEb,OAAOI,EAAQM,KAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,MAaxC,EAVA,SAAAO,GAEb,OADgBT,IAAMU,KAdR,SAcsBD,GACrBJ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAQ5B,EALA,SAACJ,EAAIM,GAElB,OADgBT,IAAMW,IAAN,UAnBF,SAmBE,YAAwBR,GAAMM,GAC/BJ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QCZ5BK,G,MAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAGF,yBAAKjB,UAAU,SAASiB,K,4NCDjC,IA+EeC,EA/EH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,oBAAU,WACRC,IAAqBpB,KAAK,SAAAqB,GAAY,OAAIT,EAASS,MAClD,IAEH,IAAMC,EAAcP,EAAUJ,EAAQA,EAAMY,OAAO,SAAApC,GAAI,OAAIA,EAAKG,YA8B1DkC,EAAqB,SAAA1B,GACzB,IAAMX,EAAOwB,EAAMc,KAAK,SAAAC,GAAC,OAAIA,EAAE5B,KAAOA,IAChC6B,E,qVAAW,IAAQxC,EAAR,CAAcG,WAAYH,EAAKG,YAEhD8B,EACUtB,EAAI6B,GACX3B,KAAK,SAAA4B,GACJhB,EAASD,EAAMkB,IAAI,SAAA1C,GAAI,OAAKA,EAAKW,KAAOA,EAAKX,EAAOyC,OAErDE,MAAM,SAAAC,GACLb,EAAgB,SAAD,OACJ/B,EAAKK,QADD,sCAGfwC,WAAW,WACTd,EAAgB,OACf,KACHN,EAASD,EAAMY,OAAO,SAAAG,GAAC,OAAIA,EAAE5B,KAAOA,QAI1C,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcU,QAASS,IAEvB,6BACE,4BAAQxB,QAAS,kBAAMuB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BAzDFO,EAAYO,IAAI,SAAA1C,GAAI,OAClB,kBAAC,EAAD,CACE8C,IAAK9C,EAAKW,GACVX,KAAMA,EACNC,iBAAkB,kBAAMoC,EAAmBrC,EAAKW,UAsDlD,0BAAMoC,SA9CM,SAAAC,GACdA,EAAMC,iBACN,IAAMC,EAAa,CACjB7C,QAASqB,EACTd,MAAM,IAAIuC,MAAOC,cACjBjD,UAAWkD,KAAKC,SAAW,GAC3B3C,GAAIa,EAAM+B,OAAS,GAGrBtB,EAAmBiB,GAAYrC,KAAK,SAAAE,GAClCU,EAASD,EAAMR,OAAOD,IACtBY,EAAW,QAoCT,2BAAO6B,MAAO9B,EAAS+B,SAnDJ,SAAAT,GACvBrB,EAAWqB,EAAMU,OAAOF,UAmDpB,4BAAQG,KAAK,UAAb,WC3ERC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.bce7df6d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important' : 'make important';\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import axios from 'axios'\nconst baseUrl = '/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className='error'>{message}</div>;\n};\nexport default Notification;\n","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport './index.css';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => setNotes(initialNotes));\n  }, []);\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  const rows = () =>\n    notesToShow.map(note => (\n      <Note\n        key={note.id}\n        note={note}\n        toggleImportance={() => toggleImportanceOf(note.id)}\n      />\n    ));\n\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    };\n\n    noteService.create(noteObject).then(data => {\n      setNotes(notes.concat(data));\n      setNewNote('');\n    });\n  };\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => (note.id !== id ? note : returnedNote)));\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter(n => n.id !== id));\n      });\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>{rows()}</ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type='submit'>save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'; // highlight-line\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}